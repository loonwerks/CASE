// This file will be regenerated, do not edit

import <std_connector.camkes>;
import <global-connectors.camkes>;
import <seL4VMDTBPassthrough.idl4>;
import <FileServerInterface.camkes>;
import <FileServer/FileServer.camkes>;
import <SerialServer/SerialServer.camkes>;
import <TimeServer/TimeServer.camkes>;
import <vm-connectors.camkes>;
import <devices.camkes>;
import "components/Pacer/Pacer.camkes";
import "components/VM_FlightPlanner_Impl_SW_FlightPlanner_FlightPlanner/VM_FlightPlanner_Impl_SW_FlightPlanner_FlightPlanner.camkes";
import "components/RadioDriver_Attestation_Impl_SW_Radio_RadioDriver/RadioDriver_Attestation_Impl_SW_Radio_RadioDriver.camkes";
import "components/FlightController_Impl_SW_FlightController_FlightController/FlightController_Impl_SW_FlightController_FlightController.camkes";
import "components/AttestationManager_Impl_SW_AttestationManager_AttestationManager/AttestationManager_Impl_SW_AttestationManager_AttestationManager.camkes";
import "components/AttestationGate_Impl_SW_AttestationGate_AttestationGate/AttestationGate_Impl_SW_AttestationGate_AttestationGate.camkes";
import "components/Filter_Impl_SW_Filter_Filter/Filter_Impl_SW_Filter_Filter.camkes";
import "components/Monitor_Impl_SW_Monitor_Monitor/Monitor_Impl_SW_Monitor_Monitor.camkes";
import "components/AttestationTester_Impl_SW_AttestationTester_AttestationTester/AttestationTester_Impl_SW_AttestationTester_AttestationTester.camkes";

assembly {
  composition {
    component VM_FlightPlanner_Impl_SW_FlightPlanner_FlightPlanner vmFlightPlanner;
    component FileServer fserv;
    component SerialServer serial;
    component TimeServer time_server;
    component RadioDriver_Attestation_Impl_SW_Radio_RadioDriver SW_Radio_RadioDriver;
    component FlightController_Impl_SW_FlightController_FlightController SW_FlightController_FlightController;
    component AttestationManager_Impl_SW_AttestationManager_AttestationManager SW_AttestationManager_AttestationManager;
    component AttestationGate_Impl_SW_AttestationGate_AttestationGate SW_AttestationGate_AttestationGate;
    component Filter_Impl_SW_Filter_Filter SW_Filter_Filter;
    component Monitor_Impl_SW_Monitor_Monitor SW_Monitor_Monitor;
    component AttestationTester_Impl_SW_AttestationTester_AttestationTester SW_AttestationTester_AttestationTester;
    component Pacer pacer;

    connection seL4VMDTBPassthrough conn1(from vmFlightPlanner.dtb_self, to vmFlightPlanner.dtb);
    connection seL4RPCDataport fsvmFlightPlanner(from vmFlightPlanner.fs, to fserv.fs_ctrl);
    connection seL4GlobalAsynch notify_ready_vmFlightPlanner(from vmFlightPlanner.notification_ready_connector, to vmFlightPlanner.notification_ready);
    connection seL4TimeServer serialserver_timer(from serial.timeout, to time_server.the_timer);
    connection seL4SerialServer serial_vmFlightPlanner(from vmFlightPlanner.batch, to serial.processed_batch);
    connection seL4SerialServer serial_input_vmFlightPlanner(from vmFlightPlanner.serial_getchar, to serial.getchar);
    connection seL4Notification conn2(from vmFlightPlanner.sb_FlightPlan_1_notification, to SW_Monitor_Monitor.sb_FlightPlan_in_notification);
    connection seL4SharedDataWithCaps conn3(from vmFlightPlanner.sb_FlightPlan_queue_1, to SW_Monitor_Monitor.sb_FlightPlan_in_queue);
    connection seL4Notification conn4(from SW_Radio_RadioDriver.sb_MissionCommand_1_notification, to SW_AttestationGate_AttestationGate.sb_MissionCommand_in_notification);
    connection seL4SharedData conn5(from SW_Radio_RadioDriver.sb_MissionCommand_queue_1, to SW_AttestationGate_AttestationGate.sb_MissionCommand_in_queue);
    connection seL4Notification conn6(from SW_Radio_RadioDriver.sb_AttestationResponse_1_notification, to SW_AttestationManager_AttestationManager.sb_AttestationResponse_notification);
    connection seL4SharedData conn7(from SW_Radio_RadioDriver.sb_AttestationResponse_queue_1, to SW_AttestationManager_AttestationManager.sb_AttestationResponse_queue);
    connection seL4Notification conn8(from SW_Radio_RadioDriver.sb_AttestationTesterRequest_1_notification, to SW_AttestationTester_AttestationTester.sb_AttestationRequest_notification);
    connection seL4SharedData conn9(from SW_Radio_RadioDriver.sb_AttestationTesterRequest_queue_1, to SW_AttestationTester_AttestationTester.sb_AttestationRequest_queue);
    connection seL4Notification conn10(from SW_AttestationManager_AttestationManager.sb_AttestationRequest_1_notification, to SW_Radio_RadioDriver.sb_AttestationRequest_notification);
    connection seL4SharedData conn11(from SW_AttestationManager_AttestationManager.sb_AttestationRequest_queue_1, to SW_Radio_RadioDriver.sb_AttestationRequest_queue);
    connection seL4Notification conn12(from SW_AttestationManager_AttestationManager.sb_TrustedIds_1_notification, to SW_AttestationGate_AttestationGate.sb_TrustedIds_notification);
    connection seL4SharedData conn13(from SW_AttestationManager_AttestationManager.sb_TrustedIds_queue_1, to SW_AttestationGate_AttestationGate.sb_TrustedIds_queue);
    connection seL4Notification conn14(from SW_AttestationGate_AttestationGate.sb_MissionCommand_out_1_notification, to SW_Filter_Filter.sb_Input_notification);
    connection seL4SharedData conn15(from SW_AttestationGate_AttestationGate.sb_MissionCommand_out_queue_1, to SW_Filter_Filter.sb_Input_queue);
    connection seL4GlobalAsynch conn16(from SW_Filter_Filter.sb_Output_1_notification, to vmFlightPlanner.sb_MissionCommand_notification);
    connection seL4SharedDataWithCaps conn17(from SW_Filter_Filter.sb_Output_queue_1, to vmFlightPlanner.sb_MissionCommand_queue);
    connection seL4Notification conn18(from SW_Monitor_Monitor.sb_FlightPlan_out_1_notification, to SW_FlightController_FlightController.sb_FlightPlan_notification);
    connection seL4SharedData conn19(from SW_Monitor_Monitor.sb_FlightPlan_out_queue_1, to SW_FlightController_FlightController.sb_FlightPlan_queue);
    connection seL4Notification conn20(from SW_Monitor_Monitor.sb_Alert, to SW_FlightController_FlightController.sb_Alert);
    connection seL4SharedData conn21(from SW_Monitor_Monitor.sb_Alert_counter, to SW_FlightController_FlightController.sb_Alert_counter);
    connection seL4Notification conn22(from SW_AttestationTester_AttestationTester.sb_AttestationResponse_1_notification, to SW_Radio_RadioDriver.sb_AttestationTesterResponse_notification);
    connection seL4SharedData conn23(from SW_AttestationTester_AttestationTester.sb_AttestationResponse_queue_1, to SW_Radio_RadioDriver.sb_AttestationTesterResponse_queue);
    connection seL4Notification conn24(from pacer.tick, to pacer.tock);
    connection seL4GlobalAsynch conn25(from pacer.period_to_vmFlightPlanner_notification, to vmFlightPlanner.sb_pacer_period_notification);
    connection seL4SharedDataWithCaps conn26(from pacer.period_to_vmFlightPlanner_queue, to vmFlightPlanner.sb_pacer_period_queue);
    connection seL4Notification conn27(from pacer.period, to SW_Radio_RadioDriver.sb_pacer_notification);
    connection seL4Notification conn28(from pacer.period, to SW_FlightController_FlightController.sb_pacer_notification);
    connection seL4Notification conn29(from pacer.period, to SW_AttestationManager_AttestationManager.sb_pacer_notification);
    connection seL4Notification conn30(from pacer.period, to SW_AttestationGate_AttestationGate.sb_pacer_notification);
    connection seL4Notification conn31(from pacer.period, to SW_Filter_Filter.sb_pacer_notification);
    connection seL4Notification conn32(from pacer.period, to SW_Monitor_Monitor.sb_pacer_notification);
    connection seL4Notification conn33(from pacer.period, to SW_AttestationTester_AttestationTester.sb_pacer_notification);
  }

  configuration {
    vmFlightPlanner.cnode_size_bits = 18;
    vmFlightPlanner.simple_untyped21_pool = 12;
    vmFlightPlanner.simple_untyped12_pool = 12;
    vmFlightPlanner.num_extra_frame_caps = 0;
    vmFlightPlanner.extra_frame_map_address = 0;
    vmFlightPlanner._stack_size = 1048576;
    vmFlightPlanner._domain = 7;
    SW_Radio_RadioDriver._stack_size = 1048576;
    SW_Radio_RadioDriver._domain = 3;
    SW_FlightController_FlightController._stack_size = 1048576;
    SW_FlightController_FlightController._domain = 9;
    SW_AttestationManager_AttestationManager._stack_size = 1048576;
    SW_AttestationManager_AttestationManager._domain = 4;
    SW_AttestationGate_AttestationGate._stack_size = 1048576;
    SW_AttestationGate_AttestationGate._domain = 5;
    SW_Filter_Filter._stack_size = 1048576;
    SW_Filter_Filter._domain = 6;
    SW_Monitor_Monitor._stack_size = 1048576;
    SW_Monitor_Monitor._domain = 8;
    SW_AttestationTester_AttestationTester._stack_size = 1048576;
    SW_AttestationTester_AttestationTester._domain = 2;
    conn3.size = 16384;
    SW_Monitor_Monitor.sb_FlightPlan_in_queue_access = "R";
    conn5.size = 16384;
    SW_Radio_RadioDriver.sb_MissionCommand_queue_1_access = "W";
    SW_AttestationGate_AttestationGate.sb_MissionCommand_in_queue_access = "R";
    conn7.size = 16384;
    SW_Radio_RadioDriver.sb_AttestationResponse_queue_1_access = "W";
    SW_AttestationManager_AttestationManager.sb_AttestationResponse_queue_access = "R";
    conn9.size = 16384;
    SW_Radio_RadioDriver.sb_AttestationTesterRequest_queue_1_access = "W";
    SW_AttestationTester_AttestationTester.sb_AttestationRequest_queue_access = "R";
    conn11.size = 16384;
    SW_AttestationManager_AttestationManager.sb_AttestationRequest_queue_1_access = "W";
    SW_Radio_RadioDriver.sb_AttestationRequest_queue_access = "R";
    conn13.size = 16384;
    SW_AttestationManager_AttestationManager.sb_TrustedIds_queue_1_access = "W";
    SW_AttestationGate_AttestationGate.sb_TrustedIds_queue_access = "R";
    conn15.size = 16384;
    SW_AttestationGate_AttestationGate.sb_MissionCommand_out_queue_1_access = "W";
    SW_Filter_Filter.sb_Input_queue_access = "R";
    conn17.size = 16384;
    SW_Filter_Filter.sb_Output_queue_1_access = "W";
    vmFlightPlanner.sb_MissionCommand_notification_domain = 7;
    conn19.size = 16384;
    SW_Monitor_Monitor.sb_FlightPlan_out_queue_1_access = "W";
    SW_FlightController_FlightController.sb_FlightPlan_queue_access = "R";
    SW_Monitor_Monitor.sb_Alert_counter_access = "W";
    SW_FlightController_FlightController.sb_Alert_counter_access = "R";
    conn23.size = 16384;
    SW_AttestationTester_AttestationTester.sb_AttestationResponse_queue_1_access = "W";
    SW_Radio_RadioDriver.sb_AttestationTesterResponse_queue_access = "R";
    pacer._domain = 1;

    fserv.heap_size = 165536;
    vmFlightPlanner.fs_shmem_size = 0x100000;
    vmFlightPlanner.global_endpoint_base = 1 << 27;
    vmFlightPlanner.asid_pool = true;
    vmFlightPlanner.simple = true;
    vmFlightPlanner.base_prio = 100;
    vmFlightPlanner._priority = 101;
    vmFlightPlanner.sem_value = 0;
    vmFlightPlanner.heap_size = 0x300000;
    time_server.timers_per_client = 1;
    time_server.priority = 255;
    time_server.simple = true;
    vmFlightPlanner.serial_getchar_shmem_size = 0x1000;
    vmFlightPlanner.batch_shmem_size = 0x1000;
  }
}
