package Data_Types
public
	with Data_Model;
	with HAMR;
	with Base_Types;

	data KeepInZone
		properties
			Data_Model::Data_Representation => Array;
			Data_Model::Base_Type => (classifier (Coordinate.Impl));
			Data_Model::Dimension => (2);
			HAMR::Bit_Codec_Max_Size => 24 Bytes;
	end KeepInZone;

	data implementation KeepInZone.Impl
	end KeepInZone.Impl;

	data Coordinate
	end Coordinate;

	data implementation Coordinate.Impl
		-- This is the structure to hold the lat/long/alt values of a coordinate
		subcomponents
			Latitude: data Base_Types::Float_32;
			Longitude: data Base_Types::Float_32;
			Altitude: data Base_Types::Float_32;
		properties
			HAMR::Bit_Codec_Max_Size => 12 Bytes;
	end Coordinate.Impl;

	data Map
		-- The Map is a structure that contains 2 coordinate on either side of a region.
		properties
			Data_Model::Data_Representation => Array;
			Data_Model::Base_Type => (classifier (Coordinate.Impl));
			Data_Model::Dimension => (2);
			HAMR::Bit_Codec_Max_Size => 24 Bytes;
	end Map;

	data Command
	end Command;

	data implementation Command.Impl
		-- The Command structure contains data that the Ground Station passes to the UAV.
		subcomponents
			Map: data Map;
		properties
			HAMR::Bit_Codec_Max_Size => 24 Bytes;
	end Command.Impl;

	-- Message header
	data MsgHeader
	end MsgHeader;

	data implementation MsgHeader.Impl
		subcomponents
			src: data Base_Types::Unsigned_32;
			dst: data Base_Types::Unsigned_32;
		properties
			HAMR::Bit_Codec_Max_Size => 8 Bytes;
	end MsgHeader.Impl;

	-- RF Message structure
	data RF_Msg
	end RF_Msg;

	data implementation RF_Msg.Impl
		subcomponents
			header: data MsgHeader.Impl;
			payload: data Command.Impl;
		properties
			HAMR::Bit_Codec_Max_Size => 32 Bytes;
	end RF_Msg.Impl;

	-- This is the structure of an Attestation Request message
	-- that the Attestation Manager sends to the comm driver
	data AttestationRequestMsg
		properties
			Data_Model::Data_Representation => Array;
			Data_Model::Base_Type => (classifier (Base_Types::Unsigned_8));
			Data_Model::Dimension => (16);
			HAMR::Bit_Codec_Max_Size => 16 Bytes;
	end AttestationRequestMsg;

	data implementation AttestationRequestMsg.Impl
	end AttestationRequestMsg.Impl;

	-- This is the structure of an Attestation Response message
	-- that the comm driver returns to the Attestation Manager
	-- when it gets a response from the Ground Station
	data AttestationResponseMsg
		properties
			Data_Model::Data_Representation => Array;
			Data_Model::Base_Type => (classifier (Base_Types::Unsigned_8));
			Data_Model::Dimension => (2048);
			HAMR::Bit_Codec_Max_Size => 2048 Bytes;
	end AttestationResponseMsg;

	data implementation AttestationResponseMsg.Impl
	end AttestationResponseMsg.Impl;

	data AddressArray
		properties
			Data_Model::Data_Representation => Array;
			Data_Model::Base_Type => (classifier (Base_Types::Unsigned_32));
			Data_Model::Dimension => (4);
			HAMR::Bit_Codec_Max_Size => 16 Bytes;
	end AddressArray;

	data implementation AddressArray.Impl
	end AddressArray.Impl;

	data AllowList
	end AllowList;

	data implementation AllowList.Impl
		subcomponents
			value: data AddressArray.Impl;
		properties
			HAMR::Bit_Codec_Max_Size => 16 Bytes;
	end AllowList.Impl;

	data Mission
		-- The Mission is a list of waypoints that is generated by the Flight Planner based on a Map
		properties
			Data_Model::Data_Representation => Array;
			Data_Model::Base_Type => (classifier (Coordinate.Impl));
			Data_Model::Dimension => (3);
			HAMR::Bit_Codec_Max_Size => 36 Bytes;
	end Mission;
	
end Data_Types;