#!/usr/bin/env bash
#
# This file is autogenerated.  Do not edit
#
set -e

if [ -z "${SIREUM_HOME}" ]; then
  echo "SIREUM_HOME not set. Refer to https://github.com/sireum/kekinian/#installing"
  exit 1
fi

SCRIPT_HOME=$( cd "$( dirname "$0" )" &> /dev/null && pwd )

PATH_SEP=":"
if [ -n "$COMSPEC" -a -x "$COMSPEC" ]; then
  PATH_SEP=";"
fi

OUTPUT_DIR="${SCRIPT_HOME}/../slang_libraries/FlyZoneDatabase_Impl_SW_FlyZones_FlyZoneDatabase"

${SIREUM_HOME}/bin/sireum slang transpilers c \
  --sourcepath "${SCRIPT_HOME}/../src/main/bridge${PATH_SEP}${SCRIPT_HOME}/../src/main/component${PATH_SEP}${SCRIPT_HOME}/../src/main/seL4Nix/HAMR/SW${PATH_SEP}${SCRIPT_HOME}/../src/main/art${PATH_SEP}${SCRIPT_HOME}/../src/main/data${PATH_SEP}${SCRIPT_HOME}/../src/main/seL4Nix/HAMR/FlyZoneDatabase_Impl_SW_FlyZones_FlyZoneDatabase" \
  --output-dir "${OUTPUT_DIR}" \
  --name "FlyZoneDatabase_Impl_SW_FlyZones_FlyZoneDatabase" \
  --apps "HAMR.FlyZoneDatabase_Impl_SW_FlyZones_FlyZoneDatabase.FlyZoneDatabase" \
  --fingerprint 3 \
  --bits 64 \
  --string-size 256 \
  --sequence-size 16 \
  --sequence "MS[Z,art.Bridge]=1;MS[Z,MOption[art.Bridge]]=1;IS[Z,art.UPort]=1;IS[Z,art.UConnection]=1" \
  --constants "art.Art.maxComponents=1;art.Art.maxPorts=1" \
  --cmake-includes "+${SCRIPT_HOME}/settings_FlyZoneDatabase_Impl_SW_FlyZones_FlyZoneDatabase.cmake" \
  --forward "art.ArtNative=HAMR.FlyZoneDatabase_Impl_SW_FlyZones_FlyZoneDatabase.FlyZoneDatabase" \
  --stack-size "16777216" \
  --stable-type-id \
  --exts "${SCRIPT_HOME}/../hamr/ext-c/ext.c${PATH_SEP}${SCRIPT_HOME}/../hamr/ext-c/ext.h${PATH_SEP}${SCRIPT_HOME}/../hamr/ext-c/FlyZoneDatabase_Impl_SW_FlyZones_FlyZoneDatabase/FlyZoneDatabase_Impl_SW_FlyZones_FlyZoneDatabase.h${PATH_SEP}${SCRIPT_HOME}/../hamr/ext-c/FlyZoneDatabase_Impl_SW_FlyZones_FlyZoneDatabase/FlyZoneDatabase_Impl_SW_FlyZones_FlyZoneDatabase.c${PATH_SEP}${SCRIPT_HOME}/../hamr/ext-c/FlyZoneDatabase_Impl_SW_FlyZones_FlyZoneDatabase/FlyZoneDatabase_Impl_SW_FlyZones_FlyZoneDatabase_api.h${PATH_SEP}${SCRIPT_HOME}/../hamr/ext-c/FlyZoneDatabase_Impl_SW_FlyZones_FlyZoneDatabase/FlyZoneDatabase_Impl_SW_FlyZones_FlyZoneDatabase_api.c${PATH_SEP}${SCRIPT_HOME}/../hamr/etc_seL4/adapters/FlyZoneDatabase_Impl_SW_FlyZones_FlyZoneDatabase/FlyZoneDatabase_Impl_SW_FlyZones_FlyZoneDatabase_adapter.h${PATH_SEP}${SCRIPT_HOME}/../hamr/etc_seL4/adapters/FlyZoneDatabase_Impl_SW_FlyZones_FlyZoneDatabase/FlyZoneDatabase_Impl_SW_FlyZones_FlyZoneDatabase_adapter.c" \
  --exclude-build "HAMR.SW.FlyZoneDatabase_Impl_SW_FlyZones_FlyZoneDatabase,HAMR.SW.RadioDriver_Attestation_Impl_SW_Radio_RadioDriver_Attestation,HAMR.SW.UARTDriver_Impl_SW_UART_UARTDriver,HAMR.SW.CASE_AttestationGate_Impl_SW_AttestationGate_CASE_AttestationGate,HAMR.SW.CASE_Filter_Impl_SW_Filter_CASE_Filter,HAMR.SW.WaypointManager_Impl_SW_WaypointManager_WaypointManager,HAMR.SW.CASE_AttestationManager_Impl_SW_AttestationManager_CASE_AttestationManager,HAMR.SW.GeofenceMonitor_Impl_SW_GeofenceMonitor_GeofenceMonitor,HAMR.SW.ResponseMonitor_Impl_SW_ResponseMonitor_ResponseMonitor,HAMR.SW.FlightPlanner_Impl_SW_FlightPlanner_FlightPlanner" \
  --lib-only \
  --verbose

OUTPUT_DIR="${SCRIPT_HOME}/../slang_libraries/RadioDriver_Attestation_Impl_SW_Radio_RadioDriver_Attestation"

${SIREUM_HOME}/bin/sireum slang transpilers c \
  --sourcepath "${SCRIPT_HOME}/../src/main/bridge${PATH_SEP}${SCRIPT_HOME}/../src/main/component${PATH_SEP}${SCRIPT_HOME}/../src/main/seL4Nix/HAMR/SW${PATH_SEP}${SCRIPT_HOME}/../src/main/art${PATH_SEP}${SCRIPT_HOME}/../src/main/data${PATH_SEP}${SCRIPT_HOME}/../src/main/seL4Nix/HAMR/RadioDriver_Attestation_Impl_SW_Radio_RadioDriver_Attestation" \
  --output-dir "${OUTPUT_DIR}" \
  --name "RadioDriver_Attestation_Impl_SW_Radio_RadioDriver_Attestation" \
  --apps "HAMR.RadioDriver_Attestation_Impl_SW_Radio_RadioDriver_Attestation.RadioDriver_Attestation" \
  --fingerprint 3 \
  --bits 64 \
  --string-size 256 \
  --sequence-size 16 \
  --sequence "MS[Z,art.Bridge]=1;MS[Z,MOption[art.Bridge]]=1;IS[Z,art.UPort]=4;IS[Z,art.UConnection]=1" \
  --constants "art.Art.maxComponents=1;art.Art.maxPorts=4" \
  --cmake-includes "+${SCRIPT_HOME}/settings_RadioDriver_Attestation_Impl_SW_Radio_RadioDriver_Attestation.cmake" \
  --forward "art.ArtNative=HAMR.RadioDriver_Attestation_Impl_SW_Radio_RadioDriver_Attestation.RadioDriver_Attestation" \
  --stack-size "16777216" \
  --stable-type-id \
  --exts "${SCRIPT_HOME}/../hamr/ext-c/ext.c${PATH_SEP}${SCRIPT_HOME}/../hamr/ext-c/ext.h${PATH_SEP}${SCRIPT_HOME}/../hamr/ext-c/RadioDriver_Attestation_Impl_SW_Radio_RadioDriver_Attestation/RadioDriver_Attestation_Impl_SW_Radio_RadioDriver_Attestation.h${PATH_SEP}${SCRIPT_HOME}/../hamr/ext-c/RadioDriver_Attestation_Impl_SW_Radio_RadioDriver_Attestation/RadioDriver_Attestation_Impl_SW_Radio_RadioDriver_Attestation.c${PATH_SEP}${SCRIPT_HOME}/../hamr/ext-c/RadioDriver_Attestation_Impl_SW_Radio_RadioDriver_Attestation/RadioDriver_Attestation_Impl_SW_Radio_RadioDriver_Attestation_api.h${PATH_SEP}${SCRIPT_HOME}/../hamr/ext-c/RadioDriver_Attestation_Impl_SW_Radio_RadioDriver_Attestation/RadioDriver_Attestation_Impl_SW_Radio_RadioDriver_Attestation_api.c${PATH_SEP}${SCRIPT_HOME}/../hamr/etc_seL4/adapters/RadioDriver_Attestation_Impl_SW_Radio_RadioDriver_Attestation/RadioDriver_Attestation_Impl_SW_Radio_RadioDriver_Attestation_adapter.h${PATH_SEP}${SCRIPT_HOME}/../hamr/etc_seL4/adapters/RadioDriver_Attestation_Impl_SW_Radio_RadioDriver_Attestation/RadioDriver_Attestation_Impl_SW_Radio_RadioDriver_Attestation_adapter.c" \
  --exclude-build "HAMR.SW.FlyZoneDatabase_Impl_SW_FlyZones_FlyZoneDatabase,HAMR.SW.RadioDriver_Attestation_Impl_SW_Radio_RadioDriver_Attestation,HAMR.SW.UARTDriver_Impl_SW_UART_UARTDriver,HAMR.SW.CASE_AttestationGate_Impl_SW_AttestationGate_CASE_AttestationGate,HAMR.SW.CASE_Filter_Impl_SW_Filter_CASE_Filter,HAMR.SW.WaypointManager_Impl_SW_WaypointManager_WaypointManager,HAMR.SW.CASE_AttestationManager_Impl_SW_AttestationManager_CASE_AttestationManager,HAMR.SW.GeofenceMonitor_Impl_SW_GeofenceMonitor_GeofenceMonitor,HAMR.SW.ResponseMonitor_Impl_SW_ResponseMonitor_ResponseMonitor,HAMR.SW.FlightPlanner_Impl_SW_FlightPlanner_FlightPlanner" \
  --lib-only \
  --verbose

OUTPUT_DIR="${SCRIPT_HOME}/../slang_libraries/UARTDriver_Impl_SW_UART_UARTDriver"

${SIREUM_HOME}/bin/sireum slang transpilers c \
  --sourcepath "${SCRIPT_HOME}/../src/main/bridge${PATH_SEP}${SCRIPT_HOME}/../src/main/component${PATH_SEP}${SCRIPT_HOME}/../src/main/seL4Nix/HAMR/SW${PATH_SEP}${SCRIPT_HOME}/../src/main/art${PATH_SEP}${SCRIPT_HOME}/../src/main/data${PATH_SEP}${SCRIPT_HOME}/../src/main/seL4Nix/HAMR/UARTDriver_Impl_SW_UART_UARTDriver" \
  --output-dir "${OUTPUT_DIR}" \
  --name "UARTDriver_Impl_SW_UART_UARTDriver" \
  --apps "HAMR.UARTDriver_Impl_SW_UART_UARTDriver.UARTDriver" \
  --fingerprint 3 \
  --bits 64 \
  --string-size 256 \
  --sequence-size 16 \
  --sequence "MS[Z,art.Bridge]=1;MS[Z,MOption[art.Bridge]]=1;IS[Z,art.UPort]=2;IS[Z,art.UConnection]=1" \
  --constants "art.Art.maxComponents=1;art.Art.maxPorts=2" \
  --cmake-includes "+${SCRIPT_HOME}/settings_UARTDriver_Impl_SW_UART_UARTDriver.cmake" \
  --forward "art.ArtNative=HAMR.UARTDriver_Impl_SW_UART_UARTDriver.UARTDriver" \
  --stack-size "16777216" \
  --stable-type-id \
  --exts "${SCRIPT_HOME}/../hamr/ext-c/ext.c${PATH_SEP}${SCRIPT_HOME}/../hamr/ext-c/ext.h${PATH_SEP}${SCRIPT_HOME}/../hamr/ext-c/UARTDriver_Impl_SW_UART_UARTDriver/UARTDriver_Impl_SW_UART_UARTDriver.h${PATH_SEP}${SCRIPT_HOME}/../hamr/ext-c/UARTDriver_Impl_SW_UART_UARTDriver/UARTDriver_Impl_SW_UART_UARTDriver.c${PATH_SEP}${SCRIPT_HOME}/../hamr/ext-c/UARTDriver_Impl_SW_UART_UARTDriver/UARTDriver_Impl_SW_UART_UARTDriver_api.h${PATH_SEP}${SCRIPT_HOME}/../hamr/ext-c/UARTDriver_Impl_SW_UART_UARTDriver/UARTDriver_Impl_SW_UART_UARTDriver_api.c${PATH_SEP}${SCRIPT_HOME}/../hamr/etc_seL4/adapters/UARTDriver_Impl_SW_UART_UARTDriver/UARTDriver_Impl_SW_UART_UARTDriver_adapter.h${PATH_SEP}${SCRIPT_HOME}/../hamr/etc_seL4/adapters/UARTDriver_Impl_SW_UART_UARTDriver/UARTDriver_Impl_SW_UART_UARTDriver_adapter.c" \
  --exclude-build "HAMR.SW.FlyZoneDatabase_Impl_SW_FlyZones_FlyZoneDatabase,HAMR.SW.RadioDriver_Attestation_Impl_SW_Radio_RadioDriver_Attestation,HAMR.SW.UARTDriver_Impl_SW_UART_UARTDriver,HAMR.SW.CASE_AttestationGate_Impl_SW_AttestationGate_CASE_AttestationGate,HAMR.SW.CASE_Filter_Impl_SW_Filter_CASE_Filter,HAMR.SW.WaypointManager_Impl_SW_WaypointManager_WaypointManager,HAMR.SW.CASE_AttestationManager_Impl_SW_AttestationManager_CASE_AttestationManager,HAMR.SW.GeofenceMonitor_Impl_SW_GeofenceMonitor_GeofenceMonitor,HAMR.SW.ResponseMonitor_Impl_SW_ResponseMonitor_ResponseMonitor,HAMR.SW.FlightPlanner_Impl_SW_FlightPlanner_FlightPlanner" \
  --lib-only \
  --verbose

OUTPUT_DIR="${SCRIPT_HOME}/../slang_libraries/CASE_AttestationGate_Impl_SW_AttestationGate_CASE_AttestationGate"

${SIREUM_HOME}/bin/sireum slang transpilers c \
  --sourcepath "${SCRIPT_HOME}/../src/main/bridge${PATH_SEP}${SCRIPT_HOME}/../src/main/component${PATH_SEP}${SCRIPT_HOME}/../src/main/seL4Nix/HAMR/SW${PATH_SEP}${SCRIPT_HOME}/../src/main/art${PATH_SEP}${SCRIPT_HOME}/../src/main/data${PATH_SEP}${SCRIPT_HOME}/../src/main/seL4Nix/HAMR/CASE_AttestationGate_Impl_SW_AttestationGate_CASE_AttestationGate" \
  --output-dir "${OUTPUT_DIR}" \
  --name "CASE_AttestationGate_Impl_SW_AttestationGate_CASE_AttestationGate" \
  --apps "HAMR.CASE_AttestationGate_Impl_SW_AttestationGate_CASE_AttestationGate.CASE_AttestationGate" \
  --fingerprint 3 \
  --bits 64 \
  --string-size 256 \
  --sequence-size 16 \
  --sequence "MS[Z,art.Bridge]=1;MS[Z,MOption[art.Bridge]]=1;IS[Z,art.UPort]=3;IS[Z,art.UConnection]=1" \
  --constants "art.Art.maxComponents=1;art.Art.maxPorts=3" \
  --cmake-includes "+${SCRIPT_HOME}/settings_CASE_AttestationGate_Impl_SW_AttestationGate_CASE_AttestationGate.cmake" \
  --forward "art.ArtNative=HAMR.CASE_AttestationGate_Impl_SW_AttestationGate_CASE_AttestationGate.CASE_AttestationGate" \
  --stack-size "16777216" \
  --stable-type-id \
  --exts "${SCRIPT_HOME}/../hamr/ext-c/ext.c${PATH_SEP}${SCRIPT_HOME}/../hamr/ext-c/ext.h${PATH_SEP}${SCRIPT_HOME}/../hamr/ext-c/CASE_AttestationGate_Impl_SW_AttestationGate_CASE_AttestationGate/CASE_AttestationGate_Impl_SW_AttestationGate_CASE_AttestationGate.h${PATH_SEP}${SCRIPT_HOME}/../hamr/ext-c/CASE_AttestationGate_Impl_SW_AttestationGate_CASE_AttestationGate/CASE_AttestationGate_Impl_SW_AttestationGate_CASE_AttestationGate.c${PATH_SEP}${SCRIPT_HOME}/../hamr/ext-c/CASE_AttestationGate_Impl_SW_AttestationGate_CASE_AttestationGate/CASE_AttestationGate_Impl_SW_AttestationGate_CASE_AttestationGate_api.h${PATH_SEP}${SCRIPT_HOME}/../hamr/ext-c/CASE_AttestationGate_Impl_SW_AttestationGate_CASE_AttestationGate/CASE_AttestationGate_Impl_SW_AttestationGate_CASE_AttestationGate_api.c${PATH_SEP}${SCRIPT_HOME}/../hamr/etc_seL4/adapters/CASE_AttestationGate_Impl_SW_AttestationGate_CASE_AttestationGate/CASE_AttestationGate_Impl_SW_AttestationGate_CASE_AttestationGate_adapter.h${PATH_SEP}${SCRIPT_HOME}/../hamr/etc_seL4/adapters/CASE_AttestationGate_Impl_SW_AttestationGate_CASE_AttestationGate/CASE_AttestationGate_Impl_SW_AttestationGate_CASE_AttestationGate_adapter.c" \
  --exclude-build "HAMR.SW.FlyZoneDatabase_Impl_SW_FlyZones_FlyZoneDatabase,HAMR.SW.RadioDriver_Attestation_Impl_SW_Radio_RadioDriver_Attestation,HAMR.SW.UARTDriver_Impl_SW_UART_UARTDriver,HAMR.SW.CASE_AttestationGate_Impl_SW_AttestationGate_CASE_AttestationGate,HAMR.SW.CASE_Filter_Impl_SW_Filter_CASE_Filter,HAMR.SW.WaypointManager_Impl_SW_WaypointManager_WaypointManager,HAMR.SW.CASE_AttestationManager_Impl_SW_AttestationManager_CASE_AttestationManager,HAMR.SW.GeofenceMonitor_Impl_SW_GeofenceMonitor_GeofenceMonitor,HAMR.SW.ResponseMonitor_Impl_SW_ResponseMonitor_ResponseMonitor,HAMR.SW.FlightPlanner_Impl_SW_FlightPlanner_FlightPlanner" \
  --lib-only \
  --verbose

OUTPUT_DIR="${SCRIPT_HOME}/../slang_libraries/CASE_Filter_Impl_SW_Filter_CASE_Filter"

${SIREUM_HOME}/bin/sireum slang transpilers c \
  --sourcepath "${SCRIPT_HOME}/../src/main/bridge${PATH_SEP}${SCRIPT_HOME}/../src/main/component${PATH_SEP}${SCRIPT_HOME}/../src/main/seL4Nix/HAMR/SW${PATH_SEP}${SCRIPT_HOME}/../src/main/art${PATH_SEP}${SCRIPT_HOME}/../src/main/data${PATH_SEP}${SCRIPT_HOME}/../src/main/seL4Nix/HAMR/CASE_Filter_Impl_SW_Filter_CASE_Filter" \
  --output-dir "${OUTPUT_DIR}" \
  --name "CASE_Filter_Impl_SW_Filter_CASE_Filter" \
  --apps "HAMR.CASE_Filter_Impl_SW_Filter_CASE_Filter.CASE_Filter" \
  --fingerprint 3 \
  --bits 64 \
  --string-size 256 \
  --sequence-size 16 \
  --sequence "MS[Z,art.Bridge]=1;MS[Z,MOption[art.Bridge]]=1;IS[Z,art.UPort]=2;IS[Z,art.UConnection]=1" \
  --constants "art.Art.maxComponents=1;art.Art.maxPorts=2" \
  --cmake-includes "+${SCRIPT_HOME}/settings_CASE_Filter_Impl_SW_Filter_CASE_Filter.cmake" \
  --forward "art.ArtNative=HAMR.CASE_Filter_Impl_SW_Filter_CASE_Filter.CASE_Filter" \
  --stack-size "16777216" \
  --stable-type-id \
  --exts "${SCRIPT_HOME}/../hamr/ext-c/ext.c${PATH_SEP}${SCRIPT_HOME}/../hamr/ext-c/ext.h${PATH_SEP}${SCRIPT_HOME}/../hamr/ext-c/CASE_Filter_Impl_SW_Filter_CASE_Filter/CASE_Filter_Impl_SW_Filter_CASE_Filter.h${PATH_SEP}${SCRIPT_HOME}/../hamr/ext-c/CASE_Filter_Impl_SW_Filter_CASE_Filter/CASE_Filter_Impl_SW_Filter_CASE_Filter.c${PATH_SEP}${SCRIPT_HOME}/../hamr/ext-c/CASE_Filter_Impl_SW_Filter_CASE_Filter/CASE_Filter_Impl_SW_Filter_CASE_Filter_api.h${PATH_SEP}${SCRIPT_HOME}/../hamr/ext-c/CASE_Filter_Impl_SW_Filter_CASE_Filter/CASE_Filter_Impl_SW_Filter_CASE_Filter_api.c${PATH_SEP}${SCRIPT_HOME}/../hamr/etc_seL4/adapters/CASE_Filter_Impl_SW_Filter_CASE_Filter/CASE_Filter_Impl_SW_Filter_CASE_Filter_adapter.h${PATH_SEP}${SCRIPT_HOME}/../hamr/etc_seL4/adapters/CASE_Filter_Impl_SW_Filter_CASE_Filter/CASE_Filter_Impl_SW_Filter_CASE_Filter_adapter.c" \
  --exclude-build "HAMR.SW.FlyZoneDatabase_Impl_SW_FlyZones_FlyZoneDatabase,HAMR.SW.RadioDriver_Attestation_Impl_SW_Radio_RadioDriver_Attestation,HAMR.SW.UARTDriver_Impl_SW_UART_UARTDriver,HAMR.SW.CASE_AttestationGate_Impl_SW_AttestationGate_CASE_AttestationGate,HAMR.SW.CASE_Filter_Impl_SW_Filter_CASE_Filter,HAMR.SW.WaypointManager_Impl_SW_WaypointManager_WaypointManager,HAMR.SW.CASE_AttestationManager_Impl_SW_AttestationManager_CASE_AttestationManager,HAMR.SW.GeofenceMonitor_Impl_SW_GeofenceMonitor_GeofenceMonitor,HAMR.SW.ResponseMonitor_Impl_SW_ResponseMonitor_ResponseMonitor,HAMR.SW.FlightPlanner_Impl_SW_FlightPlanner_FlightPlanner" \
  --lib-only \
  --verbose

OUTPUT_DIR="${SCRIPT_HOME}/../slang_libraries/WaypointManager_Impl_SW_WaypointManager_WaypointManager"

${SIREUM_HOME}/bin/sireum slang transpilers c \
  --sourcepath "${SCRIPT_HOME}/../src/main/bridge${PATH_SEP}${SCRIPT_HOME}/../src/main/component${PATH_SEP}${SCRIPT_HOME}/../src/main/seL4Nix/HAMR/SW${PATH_SEP}${SCRIPT_HOME}/../src/main/art${PATH_SEP}${SCRIPT_HOME}/../src/main/data${PATH_SEP}${SCRIPT_HOME}/../src/main/seL4Nix/HAMR/WaypointManager_Impl_SW_WaypointManager_WaypointManager" \
  --output-dir "${OUTPUT_DIR}" \
  --name "WaypointManager_Impl_SW_WaypointManager_WaypointManager" \
  --apps "HAMR.WaypointManager_Impl_SW_WaypointManager_WaypointManager.WaypointManager" \
  --fingerprint 3 \
  --bits 64 \
  --string-size 256 \
  --sequence-size 16 \
  --sequence "MS[Z,art.Bridge]=1;MS[Z,MOption[art.Bridge]]=1;IS[Z,art.UPort]=4;IS[Z,art.UConnection]=1" \
  --constants "art.Art.maxComponents=1;art.Art.maxPorts=4" \
  --cmake-includes "+${SCRIPT_HOME}/settings_WaypointManager_Impl_SW_WaypointManager_WaypointManager.cmake" \
  --forward "art.ArtNative=HAMR.WaypointManager_Impl_SW_WaypointManager_WaypointManager.WaypointManager" \
  --stack-size "16777216" \
  --stable-type-id \
  --exts "${SCRIPT_HOME}/../hamr/ext-c/ext.c${PATH_SEP}${SCRIPT_HOME}/../hamr/ext-c/ext.h${PATH_SEP}${SCRIPT_HOME}/../hamr/ext-c/WaypointManager_Impl_SW_WaypointManager_WaypointManager/WaypointManager_Impl_SW_WaypointManager_WaypointManager.h${PATH_SEP}${SCRIPT_HOME}/../hamr/ext-c/WaypointManager_Impl_SW_WaypointManager_WaypointManager/WaypointManager_Impl_SW_WaypointManager_WaypointManager.c${PATH_SEP}${SCRIPT_HOME}/../hamr/ext-c/WaypointManager_Impl_SW_WaypointManager_WaypointManager/WaypointManager_Impl_SW_WaypointManager_WaypointManager_api.h${PATH_SEP}${SCRIPT_HOME}/../hamr/ext-c/WaypointManager_Impl_SW_WaypointManager_WaypointManager/WaypointManager_Impl_SW_WaypointManager_WaypointManager_api.c${PATH_SEP}${SCRIPT_HOME}/../hamr/etc_seL4/adapters/WaypointManager_Impl_SW_WaypointManager_WaypointManager/WaypointManager_Impl_SW_WaypointManager_WaypointManager_adapter.h${PATH_SEP}${SCRIPT_HOME}/../hamr/etc_seL4/adapters/WaypointManager_Impl_SW_WaypointManager_WaypointManager/WaypointManager_Impl_SW_WaypointManager_WaypointManager_adapter.c" \
  --exclude-build "HAMR.SW.FlyZoneDatabase_Impl_SW_FlyZones_FlyZoneDatabase,HAMR.SW.RadioDriver_Attestation_Impl_SW_Radio_RadioDriver_Attestation,HAMR.SW.UARTDriver_Impl_SW_UART_UARTDriver,HAMR.SW.CASE_AttestationGate_Impl_SW_AttestationGate_CASE_AttestationGate,HAMR.SW.CASE_Filter_Impl_SW_Filter_CASE_Filter,HAMR.SW.WaypointManager_Impl_SW_WaypointManager_WaypointManager,HAMR.SW.CASE_AttestationManager_Impl_SW_AttestationManager_CASE_AttestationManager,HAMR.SW.GeofenceMonitor_Impl_SW_GeofenceMonitor_GeofenceMonitor,HAMR.SW.ResponseMonitor_Impl_SW_ResponseMonitor_ResponseMonitor,HAMR.SW.FlightPlanner_Impl_SW_FlightPlanner_FlightPlanner" \
  --lib-only \
  --verbose

OUTPUT_DIR="${SCRIPT_HOME}/../slang_libraries/CASE_AttestationManager_Impl_SW_AttestationManager_CASE_AttestationManager"

${SIREUM_HOME}/bin/sireum slang transpilers c \
  --sourcepath "${SCRIPT_HOME}/../src/main/bridge${PATH_SEP}${SCRIPT_HOME}/../src/main/component${PATH_SEP}${SCRIPT_HOME}/../src/main/seL4Nix/HAMR/SW${PATH_SEP}${SCRIPT_HOME}/../src/main/art${PATH_SEP}${SCRIPT_HOME}/../src/main/data${PATH_SEP}${SCRIPT_HOME}/../src/main/seL4Nix/HAMR/CASE_AttestationManager_Impl_SW_AttestationManager_CASE_AttestationManager" \
  --output-dir "${OUTPUT_DIR}" \
  --name "CASE_AttestationManager_Impl_SW_AttestationManager_CASE_AttestationManager" \
  --apps "HAMR.CASE_AttestationManager_Impl_SW_AttestationManager_CASE_AttestationManager.CASE_AttestationManager" \
  --fingerprint 3 \
  --bits 64 \
  --string-size 256 \
  --sequence-size 16 \
  --sequence "MS[Z,art.Bridge]=1;MS[Z,MOption[art.Bridge]]=1;IS[Z,art.UPort]=3;IS[Z,art.UConnection]=1" \
  --constants "art.Art.maxComponents=1;art.Art.maxPorts=3" \
  --cmake-includes "+${SCRIPT_HOME}/settings_CASE_AttestationManager_Impl_SW_AttestationManager_CASE_AttestationManager.cmake" \
  --forward "art.ArtNative=HAMR.CASE_AttestationManager_Impl_SW_AttestationManager_CASE_AttestationManager.CASE_AttestationManager" \
  --stack-size "16777216" \
  --stable-type-id \
  --exts "${SCRIPT_HOME}/../hamr/ext-c/ext.c${PATH_SEP}${SCRIPT_HOME}/../hamr/ext-c/ext.h${PATH_SEP}${SCRIPT_HOME}/../hamr/ext-c/CASE_AttestationManager_Impl_SW_AttestationManager_CASE_AttestationManager/CASE_AttestationManager_Impl_SW_AttestationManager_CASE_AttestationManager.h${PATH_SEP}${SCRIPT_HOME}/../hamr/ext-c/CASE_AttestationManager_Impl_SW_AttestationManager_CASE_AttestationManager/CASE_AttestationManager_Impl_SW_AttestationManager_CASE_AttestationManager.c${PATH_SEP}${SCRIPT_HOME}/../hamr/ext-c/CASE_AttestationManager_Impl_SW_AttestationManager_CASE_AttestationManager/CASE_AttestationManager_Impl_SW_AttestationManager_CASE_AttestationManager_api.h${PATH_SEP}${SCRIPT_HOME}/../hamr/ext-c/CASE_AttestationManager_Impl_SW_AttestationManager_CASE_AttestationManager/CASE_AttestationManager_Impl_SW_AttestationManager_CASE_AttestationManager_api.c${PATH_SEP}${SCRIPT_HOME}/../hamr/etc_seL4/adapters/CASE_AttestationManager_Impl_SW_AttestationManager_CASE_AttestationManager/CASE_AttestationManager_Impl_SW_AttestationManager_CASE_AttestationManager_adapter.h${PATH_SEP}${SCRIPT_HOME}/../hamr/etc_seL4/adapters/CASE_AttestationManager_Impl_SW_AttestationManager_CASE_AttestationManager/CASE_AttestationManager_Impl_SW_AttestationManager_CASE_AttestationManager_adapter.c" \
  --exclude-build "HAMR.SW.FlyZoneDatabase_Impl_SW_FlyZones_FlyZoneDatabase,HAMR.SW.RadioDriver_Attestation_Impl_SW_Radio_RadioDriver_Attestation,HAMR.SW.UARTDriver_Impl_SW_UART_UARTDriver,HAMR.SW.CASE_AttestationGate_Impl_SW_AttestationGate_CASE_AttestationGate,HAMR.SW.CASE_Filter_Impl_SW_Filter_CASE_Filter,HAMR.SW.WaypointManager_Impl_SW_WaypointManager_WaypointManager,HAMR.SW.CASE_AttestationManager_Impl_SW_AttestationManager_CASE_AttestationManager,HAMR.SW.GeofenceMonitor_Impl_SW_GeofenceMonitor_GeofenceMonitor,HAMR.SW.ResponseMonitor_Impl_SW_ResponseMonitor_ResponseMonitor,HAMR.SW.FlightPlanner_Impl_SW_FlightPlanner_FlightPlanner" \
  --lib-only \
  --verbose

OUTPUT_DIR="${SCRIPT_HOME}/../slang_libraries/GeofenceMonitor_Impl_SW_GeofenceMonitor_GeofenceMonitor"

${SIREUM_HOME}/bin/sireum slang transpilers c \
  --sourcepath "${SCRIPT_HOME}/../src/main/bridge${PATH_SEP}${SCRIPT_HOME}/../src/main/component${PATH_SEP}${SCRIPT_HOME}/../src/main/seL4Nix/HAMR/SW${PATH_SEP}${SCRIPT_HOME}/../src/main/art${PATH_SEP}${SCRIPT_HOME}/../src/main/data${PATH_SEP}${SCRIPT_HOME}/../src/main/seL4Nix/HAMR/GeofenceMonitor_Impl_SW_GeofenceMonitor_GeofenceMonitor" \
  --output-dir "${OUTPUT_DIR}" \
  --name "GeofenceMonitor_Impl_SW_GeofenceMonitor_GeofenceMonitor" \
  --apps "HAMR.GeofenceMonitor_Impl_SW_GeofenceMonitor_GeofenceMonitor.GeofenceMonitor" \
  --fingerprint 3 \
  --bits 64 \
  --string-size 256 \
  --sequence-size 16 \
  --sequence "MS[Z,art.Bridge]=1;MS[Z,MOption[art.Bridge]]=1;IS[Z,art.UPort]=4;IS[Z,art.UConnection]=1" \
  --constants "art.Art.maxComponents=1;art.Art.maxPorts=4" \
  --cmake-includes "+${SCRIPT_HOME}/settings_GeofenceMonitor_Impl_SW_GeofenceMonitor_GeofenceMonitor.cmake" \
  --forward "art.ArtNative=HAMR.GeofenceMonitor_Impl_SW_GeofenceMonitor_GeofenceMonitor.GeofenceMonitor" \
  --stack-size "16777216" \
  --stable-type-id \
  --exts "${SCRIPT_HOME}/../hamr/ext-c/ext.c${PATH_SEP}${SCRIPT_HOME}/../hamr/ext-c/ext.h${PATH_SEP}${SCRIPT_HOME}/../hamr/ext-c/GeofenceMonitor_Impl_SW_GeofenceMonitor_GeofenceMonitor/GeofenceMonitor_Impl_SW_GeofenceMonitor_GeofenceMonitor.h${PATH_SEP}${SCRIPT_HOME}/../hamr/ext-c/GeofenceMonitor_Impl_SW_GeofenceMonitor_GeofenceMonitor/GeofenceMonitor_Impl_SW_GeofenceMonitor_GeofenceMonitor.c${PATH_SEP}${SCRIPT_HOME}/../hamr/ext-c/GeofenceMonitor_Impl_SW_GeofenceMonitor_GeofenceMonitor/GeofenceMonitor_Impl_SW_GeofenceMonitor_GeofenceMonitor_api.h${PATH_SEP}${SCRIPT_HOME}/../hamr/ext-c/GeofenceMonitor_Impl_SW_GeofenceMonitor_GeofenceMonitor/GeofenceMonitor_Impl_SW_GeofenceMonitor_GeofenceMonitor_api.c${PATH_SEP}${SCRIPT_HOME}/../hamr/etc_seL4/adapters/GeofenceMonitor_Impl_SW_GeofenceMonitor_GeofenceMonitor/GeofenceMonitor_Impl_SW_GeofenceMonitor_GeofenceMonitor_adapter.h${PATH_SEP}${SCRIPT_HOME}/../hamr/etc_seL4/adapters/GeofenceMonitor_Impl_SW_GeofenceMonitor_GeofenceMonitor/GeofenceMonitor_Impl_SW_GeofenceMonitor_GeofenceMonitor_adapter.c" \
  --exclude-build "HAMR.SW.FlyZoneDatabase_Impl_SW_FlyZones_FlyZoneDatabase,HAMR.SW.RadioDriver_Attestation_Impl_SW_Radio_RadioDriver_Attestation,HAMR.SW.UARTDriver_Impl_SW_UART_UARTDriver,HAMR.SW.CASE_AttestationGate_Impl_SW_AttestationGate_CASE_AttestationGate,HAMR.SW.CASE_Filter_Impl_SW_Filter_CASE_Filter,HAMR.SW.WaypointManager_Impl_SW_WaypointManager_WaypointManager,HAMR.SW.CASE_AttestationManager_Impl_SW_AttestationManager_CASE_AttestationManager,HAMR.SW.GeofenceMonitor_Impl_SW_GeofenceMonitor_GeofenceMonitor,HAMR.SW.ResponseMonitor_Impl_SW_ResponseMonitor_ResponseMonitor,HAMR.SW.FlightPlanner_Impl_SW_FlightPlanner_FlightPlanner" \
  --lib-only \
  --verbose

OUTPUT_DIR="${SCRIPT_HOME}/../slang_libraries/ResponseMonitor_Impl_SW_ResponseMonitor_ResponseMonitor"

${SIREUM_HOME}/bin/sireum slang transpilers c \
  --sourcepath "${SCRIPT_HOME}/../src/main/bridge${PATH_SEP}${SCRIPT_HOME}/../src/main/component${PATH_SEP}${SCRIPT_HOME}/../src/main/seL4Nix/HAMR/SW${PATH_SEP}${SCRIPT_HOME}/../src/main/art${PATH_SEP}${SCRIPT_HOME}/../src/main/data${PATH_SEP}${SCRIPT_HOME}/../src/main/seL4Nix/HAMR/ResponseMonitor_Impl_SW_ResponseMonitor_ResponseMonitor" \
  --output-dir "${OUTPUT_DIR}" \
  --name "ResponseMonitor_Impl_SW_ResponseMonitor_ResponseMonitor" \
  --apps "HAMR.ResponseMonitor_Impl_SW_ResponseMonitor_ResponseMonitor.ResponseMonitor" \
  --fingerprint 3 \
  --bits 64 \
  --string-size 256 \
  --sequence-size 16 \
  --sequence "MS[Z,art.Bridge]=1;MS[Z,MOption[art.Bridge]]=1;IS[Z,art.UPort]=3;IS[Z,art.UConnection]=1" \
  --constants "art.Art.maxComponents=1;art.Art.maxPorts=3" \
  --cmake-includes "+${SCRIPT_HOME}/settings_ResponseMonitor_Impl_SW_ResponseMonitor_ResponseMonitor.cmake" \
  --forward "art.ArtNative=HAMR.ResponseMonitor_Impl_SW_ResponseMonitor_ResponseMonitor.ResponseMonitor" \
  --stack-size "16777216" \
  --stable-type-id \
  --exts "${SCRIPT_HOME}/../hamr/ext-c/ext.c${PATH_SEP}${SCRIPT_HOME}/../hamr/ext-c/ext.h${PATH_SEP}${SCRIPT_HOME}/../hamr/ext-c/ResponseMonitor_Impl_SW_ResponseMonitor_ResponseMonitor/ResponseMonitor_Impl_SW_ResponseMonitor_ResponseMonitor.h${PATH_SEP}${SCRIPT_HOME}/../hamr/ext-c/ResponseMonitor_Impl_SW_ResponseMonitor_ResponseMonitor/ResponseMonitor_Impl_SW_ResponseMonitor_ResponseMonitor.c${PATH_SEP}${SCRIPT_HOME}/../hamr/ext-c/ResponseMonitor_Impl_SW_ResponseMonitor_ResponseMonitor/ResponseMonitor_Impl_SW_ResponseMonitor_ResponseMonitor_api.h${PATH_SEP}${SCRIPT_HOME}/../hamr/ext-c/ResponseMonitor_Impl_SW_ResponseMonitor_ResponseMonitor/ResponseMonitor_Impl_SW_ResponseMonitor_ResponseMonitor_api.c${PATH_SEP}${SCRIPT_HOME}/../hamr/etc_seL4/adapters/ResponseMonitor_Impl_SW_ResponseMonitor_ResponseMonitor/ResponseMonitor_Impl_SW_ResponseMonitor_ResponseMonitor_adapter.h${PATH_SEP}${SCRIPT_HOME}/../hamr/etc_seL4/adapters/ResponseMonitor_Impl_SW_ResponseMonitor_ResponseMonitor/ResponseMonitor_Impl_SW_ResponseMonitor_ResponseMonitor_adapter.c" \
  --exclude-build "HAMR.SW.FlyZoneDatabase_Impl_SW_FlyZones_FlyZoneDatabase,HAMR.SW.RadioDriver_Attestation_Impl_SW_Radio_RadioDriver_Attestation,HAMR.SW.UARTDriver_Impl_SW_UART_UARTDriver,HAMR.SW.CASE_AttestationGate_Impl_SW_AttestationGate_CASE_AttestationGate,HAMR.SW.CASE_Filter_Impl_SW_Filter_CASE_Filter,HAMR.SW.WaypointManager_Impl_SW_WaypointManager_WaypointManager,HAMR.SW.CASE_AttestationManager_Impl_SW_AttestationManager_CASE_AttestationManager,HAMR.SW.GeofenceMonitor_Impl_SW_GeofenceMonitor_GeofenceMonitor,HAMR.SW.ResponseMonitor_Impl_SW_ResponseMonitor_ResponseMonitor,HAMR.SW.FlightPlanner_Impl_SW_FlightPlanner_FlightPlanner" \
  --lib-only \
  --verbose

OUTPUT_DIR="${SCRIPT_HOME}/../slang_libraries/FlightPlanner_Impl_SW_FlightPlanner_FlightPlanner"

${SIREUM_HOME}/bin/sireum slang transpilers c \
  --sourcepath "${SCRIPT_HOME}/../src/main/bridge${PATH_SEP}${SCRIPT_HOME}/../src/main/component${PATH_SEP}${SCRIPT_HOME}/../src/main/seL4Nix/HAMR/SW${PATH_SEP}${SCRIPT_HOME}/../src/main/art${PATH_SEP}${SCRIPT_HOME}/../src/main/data${PATH_SEP}${SCRIPT_HOME}/../src/main/seL4Nix/HAMR/FlightPlanner_Impl_SW_FlightPlanner_FlightPlanner" \
  --output-dir "${OUTPUT_DIR}" \
  --name "FlightPlanner_Impl_SW_FlightPlanner_FlightPlanner" \
  --apps "HAMR.FlightPlanner_Impl_SW_FlightPlanner_FlightPlanner.FlightPlanner" \
  --fingerprint 3 \
  --bits 64 \
  --string-size 256 \
  --sequence-size 16 \
  --sequence "MS[Z,art.Bridge]=1;MS[Z,MOption[art.Bridge]]=1;IS[Z,art.UPort]=2;IS[Z,art.UConnection]=1" \
  --constants "art.Art.maxComponents=1;art.Art.maxPorts=2" \
  --cmake-includes "+${SCRIPT_HOME}/settings_FlightPlanner_Impl_SW_FlightPlanner_FlightPlanner.cmake" \
  --forward "art.ArtNative=HAMR.FlightPlanner_Impl_SW_FlightPlanner_FlightPlanner.FlightPlanner" \
  --stack-size "16777216" \
  --stable-type-id \
  --exts "${SCRIPT_HOME}/../hamr/ext-c/ext.c${PATH_SEP}${SCRIPT_HOME}/../hamr/ext-c/ext.h${PATH_SEP}${SCRIPT_HOME}/../hamr/ext-c/FlightPlanner_Impl_SW_FlightPlanner_FlightPlanner/FlightPlanner_Impl_SW_FlightPlanner_FlightPlanner.h${PATH_SEP}${SCRIPT_HOME}/../hamr/ext-c/FlightPlanner_Impl_SW_FlightPlanner_FlightPlanner/FlightPlanner_Impl_SW_FlightPlanner_FlightPlanner.c${PATH_SEP}${SCRIPT_HOME}/../hamr/ext-c/FlightPlanner_Impl_SW_FlightPlanner_FlightPlanner/FlightPlanner_Impl_SW_FlightPlanner_FlightPlanner_api.h${PATH_SEP}${SCRIPT_HOME}/../hamr/ext-c/FlightPlanner_Impl_SW_FlightPlanner_FlightPlanner/FlightPlanner_Impl_SW_FlightPlanner_FlightPlanner_api.c${PATH_SEP}${SCRIPT_HOME}/../hamr/etc_seL4/adapters/FlightPlanner_Impl_SW_FlightPlanner_FlightPlanner/FlightPlanner_Impl_SW_FlightPlanner_FlightPlanner_adapter.h${PATH_SEP}${SCRIPT_HOME}/../hamr/etc_seL4/adapters/FlightPlanner_Impl_SW_FlightPlanner_FlightPlanner/FlightPlanner_Impl_SW_FlightPlanner_FlightPlanner_adapter.c" \
  --exclude-build "HAMR.SW.FlyZoneDatabase_Impl_SW_FlyZones_FlyZoneDatabase,HAMR.SW.RadioDriver_Attestation_Impl_SW_Radio_RadioDriver_Attestation,HAMR.SW.UARTDriver_Impl_SW_UART_UARTDriver,HAMR.SW.CASE_AttestationGate_Impl_SW_AttestationGate_CASE_AttestationGate,HAMR.SW.CASE_Filter_Impl_SW_Filter_CASE_Filter,HAMR.SW.WaypointManager_Impl_SW_WaypointManager_WaypointManager,HAMR.SW.CASE_AttestationManager_Impl_SW_AttestationManager_CASE_AttestationManager,HAMR.SW.GeofenceMonitor_Impl_SW_GeofenceMonitor_GeofenceMonitor,HAMR.SW.ResponseMonitor_Impl_SW_ResponseMonitor_ResponseMonitor,HAMR.SW.FlightPlanner_Impl_SW_FlightPlanner_FlightPlanner" \
  --lib-only \
  --verbose

OUTPUT_DIR="${SCRIPT_HOME}/../slang_libraries/SlangTypeLibrary"

${SIREUM_HOME}/bin/sireum slang transpilers c \
  --sourcepath "${SCRIPT_HOME}/../src/main/art${PATH_SEP}${SCRIPT_HOME}/../src/main/data${PATH_SEP}${SCRIPT_HOME}/../src/main/seL4Nix/HAMR/SlangTypeLibrary" \
  --output-dir "${OUTPUT_DIR}" \
  --name "SlangTypeLibrary" \
  --apps "HAMR.SlangTypeLibrary.SlangTypeLibrary" \
  --fingerprint 3 \
  --bits 64 \
  --string-size 256 \
  --sequence-size 1 \
  --cmake-includes "+${SCRIPT_HOME}/settings_SlangTypeLibrary.cmake" \
  --forward "art.ArtNative=HAMR.SlangTypeLibrary.SlangTypeLibrary" \
  --stack-size "16777216" \
  --stable-type-id \
  --lib-only \
  --verbose