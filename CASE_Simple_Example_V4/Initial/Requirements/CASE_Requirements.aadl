package CASE_Requirements
private

	annex resolute {**
		
		goal Req_Attestation(comm_driver : component) <=
			** "[attestation] Only messages from trusted sources shall be accepted" **
			context Generated_By : "GearCASE";
			context Generated_On : "Jul 20, 2020";
			context Req_Component : "MC::MissionComputer.Impl.SW.Radio";
			context Formalized : "False";
			undeveloped
		
		goal Req_WellFormed_MissionCommand(comp_context : component, property_id : string) <=
			** "[permit_well_formed_data] FlightPlanner component shall only receive well-formed messages" **
			context Generated_On : "January 29, 2021";
			context Req_Component : "MC::MissionComputer.Impl.SW.FlightPlanner";
			context Formalized : "True";
			agree_property_checked(comp_context, property_id)
		
		goal Req_FlightPlanner_Geofence(comp_context : component) <=
			** "[monitor_correctness] Uncontrolled FlightPlanner component shall be monitored for output correctness" **
			context Generated_By : "GearCASE";
			context Generated_On : "Jul 20, 2020";
			context Req_Component : "MC::MissionComputer.Impl.SW.FlightPlanner";
			context Formalized : "False";
			undeveloped
		
		goal Req_Virtualization(comp_context : component) <=
			** "[application_sandboxing] Uncontrolled FlightPlanner component shall be monitored for output correctness" **
			context Generated_By : "GearCASE";
			context Generated_On : "Jul 20, 2020";
			context Req_Component : "MC::MissionComputer.Impl.SW.FlightPlanner";
			context Formalized : "False";
			undeveloped
		
	**};
end CASE_Requirements;