digraph g {
graph [
  overlap = false,
  rankdir = "LR"
];
node [
  fontsize = "16",
  shape = "ellipse"
];
edge [
];

producer_producer [
  label=<
    <TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0">
      <TR><TD><B>producer_producer</B></TD></TR>
      <TR><TD PORT="sb_write_port_queue_1"><FONT COLOR="red">dataport sb_queue_union_art_DataContent_1_t <B>sb_write_port_queue_1</B></FONT></TD></TR>
      <TR><TD PORT="sb_write_port_1_notification"><FONT COLOR="blue">emits ReceiveEvent <B>sb_write_port_1_notification</B></FONT></TD></TR>
      <TR><TD PORT="sb_self_pacer_tick"><FONT COLOR="blue">emits TickTock <B>sb_self_pacer_tick</B></FONT></TD></TR>
      <TR><TD PORT="sb_self_pacer_tock"><FONT COLOR="blue">consumes TickTock <B>sb_self_pacer_tock</B></FONT></TD></TR>"
    </TABLE>
  >
  shape=plaintext
];

consumer_consumer [
  label=<
    <TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0">
      <TR><TD><B>consumer_consumer</B></TD></TR>
      <TR><TD PORT="sb_read_port_queue"><FONT COLOR="red">dataport sb_queue_union_art_DataContent_1_t <B>sb_read_port_queue</B></FONT></TD></TR>
      <TR><TD PORT="sb_self_pacer_tick"><FONT COLOR="blue">emits TickTock <B>sb_self_pacer_tick</B></FONT></TD></TR>
      <TR><TD PORT="sb_read_port_notification"><FONT COLOR="blue">consumes ReceiveEvent <B>sb_read_port_notification</B></FONT></TD></TR>
      <TR><TD PORT="sb_self_pacer_tock"><FONT COLOR="blue">consumes TickTock <B>sb_self_pacer_tock</B></FONT></TD></TR>"
    </TABLE>
  >
  shape=plaintext
];

connectiontypekey [
  label=<
   <TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0">
     <TR><TD COLSPAN="2"><B>Key: Connection Types</B></TD></TR>
     <TR><TD><FONT COLOR="red">seL4SharedData</FONT></TD><TD BGCOLOR="red">red</TD></TR>
     <TR><TD><FONT COLOR="blue">seL4Notification</FONT></TD><TD BGCOLOR="blue">blue</TD></TR>
     <TR><TD><FONT COLOR="orange">seL4RPCCall</FONT></TD><TD BGCOLOR="orange">orange</TD></TR>
     <TR><TD><FONT COLOR="green">seL4TimeServer</FONT></TD><TD BGCOLOR="green">green</TD></TR>
     <TR><TD><FONT COLOR="brown">seL4GlobalAsynchCallback</FONT></TD><TD BGCOLOR="brown">brown</TD></TR>
     <TR><TD><FONT COLOR="yellow">seL4VMDTBPassthrough</FONT></TD><TD BGCOLOR="yellow">yellow</TD></TR>
     <TR><TD><FONT COLOR="pink">seL4SharedDataWithCaps</FONT></TD><TD BGCOLOR="pink">pink</TD></TR>
   </TABLE>
  >
  shape=plaintext
];

interfacetypekey [
  label=<
   <TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0">
     <TR><TD COLSPAN="2"><B>Key: Interface Types</B></TD></TR>
     <TR><TD><FONT COLOR="red">dataport</FONT></TD><TD BGCOLOR="red">red</TD></TR>
     <TR><TD><FONT COLOR="blue">emits</FONT></TD><TD BGCOLOR="blue">blue</TD></TR>
     <TR><TD><FONT COLOR="blue">consumes</FONT></TD><TD BGCOLOR="blue">blue</TD></TR>
     <TR><TD><FONT COLOR="orange">provides</FONT></TD><TD BGCOLOR="orange">orange</TD></TR>
     <TR><TD><FONT COLOR="orange">uses</FONT></TD><TD BGCOLOR="orange">orange</TD></TR>
   </TABLE>
  >
  shape=plaintext
];

"producer_producer":sb_write_port_1_notification -> "consumer_consumer":sb_read_port_notification [
  color="blue"
  //label = "seL4Notification"
  id = conn1

];

"producer_producer":sb_write_port_queue_1 -> "consumer_consumer":sb_read_port_queue [
  color="red"
  //label = "seL4SharedData"
  id = conn2

];

"producer_producer":sb_self_pacer_tick -> "producer_producer":sb_self_pacer_tock [
  color="blue"
  //label = "seL4Notification"
  id = conn3

];

"consumer_consumer":sb_self_pacer_tick -> "consumer_consumer":sb_self_pacer_tock [
  color="blue"
  //label = "seL4Notification"
  id = conn4

];

}