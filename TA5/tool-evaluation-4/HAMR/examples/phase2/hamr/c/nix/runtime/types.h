#ifndef SIREUM_GEN_H
#define SIREUM_GEN_H

#ifdef __cplusplus
extern "C" {
#endif

#include <misc.h>
#include <type-art_ArchitectureDescription.h>
#include <type-art_Art.h>
#include <type-art_Bridge.h>
#include <type-art_Bridge_EntryPoints.h>
#include <type-art_Bridge_Ports.h>
#include <type-art_Connection.h>
#include <type-art_DataContent.h>
#include <type-art_DispatchPropertyProtocol.h>
#include <type-art_DispatchPropertyProtocol_Periodic.h>
#include <type-art_DispatchPropertyProtocol_Sporadic.h>
#include <type-art_Empty.h>
#include <type-art_PortMode_Type.h>
#include <type-art_UConnection.h>
#include <type-art_UPort.h>
#include <type-art_art_Port_45E54D.h>
#include <type-art_art_Port_9CBF18.h>
#include <type-hamr_Arch.h>
#include <type-hamr_ArtNix.h>
#include <type-hamr_Base_Types.h>
#include <type-hamr_Base_Types_Bits_Payload.h>
#include <type-hamr_CASE_AttestationGate_thr_Impl_MCMP_PROC_SW_AM_Gate_CASE_AttestationGate_App.h>
#include <type-hamr_CASE_Filter_LST_thr_Impl_MCMP_PROC_SW_FLT_LST_CASE_Filter_LST_App.h>
#include <type-hamr_CASE_Monitor_Geo_thr_Impl_MCMP_PROC_SW_MON_GEO_CASE_Monitor_Geo_App.h>
#include <type-hamr_CASE_Monitor_Req_thr_Impl_MCMP_PROC_SW_MON_REQ_CASE_Monitor_Req_App.h>
#include <type-hamr_Drivers_UARTDriver_Impl_Api.h>
#include <type-hamr_Drivers_UARTDriver_Impl_Initialization_Api.h>
#include <type-hamr_Drivers_UARTDriver_Impl_MCMP_PROC_SW_FC_UART_UARTDriver.h>
#include <type-hamr_Drivers_UARTDriver_Impl_MCMP_PROC_SW_FC_UART_UARTDriver_Bridge.h>
#include <type-hamr_Drivers_UARTDriver_Impl_MCMP_PROC_SW_FC_UART_UARTDriver_Bridge_EntryPoints.h>
#include <type-hamr_Drivers_UARTDriver_Impl_Operational_Api.h>
#include <type-hamr_FlyZonesDatabase_thr_Impl_MCMP_PROC_SW_FlyZones_FlyZonesDatabase_App.h>
#include <type-hamr_IPCPorts.h>
#include <type-hamr_Main.h>
#include <type-hamr_PlatformNix.h>
#include <type-hamr_Process.h>
#include <type-hamr_RadioDriver_Attestation_thr_Impl_MCMP_PROC_SW_RADIO_RadioDriver_Attestation_App.h>
#include <type-hamr_SW_CASE_AttestationGate_thr_Impl_Api.h>
#include <type-hamr_SW_CASE_AttestationGate_thr_Impl_Initialization_Api.h>
#include <type-hamr_SW_CASE_AttestationGate_thr_Impl_MCMP_PROC_SW_AM_Gate_CASE_AttestationGate.h>
#include <type-hamr_SW_CASE_AttestationGate_thr_Impl_MCMP_PROC_SW_AM_Gate_CASE_AttestationGate_Bridge.h>
#include <type-hamr_SW_CASE_AttestationGate_thr_Impl_MCMP_PROC_SW_AM_Gate_CASE_AttestationGate_Bridge_EntryPoints.h>
#include <type-hamr_SW_CASE_AttestationGate_thr_Impl_Operational_Api.h>
#include <type-hamr_SW_CASE_Filter_LST_thr_Impl_Api.h>
#include <type-hamr_SW_CASE_Filter_LST_thr_Impl_Initialization_Api.h>
#include <type-hamr_SW_CASE_Filter_LST_thr_Impl_MCMP_PROC_SW_FLT_LST_CASE_Filter_LST.h>
#include <type-hamr_SW_CASE_Filter_LST_thr_Impl_MCMP_PROC_SW_FLT_LST_CASE_Filter_LST_Bridge.h>
#include <type-hamr_SW_CASE_Filter_LST_thr_Impl_MCMP_PROC_SW_FLT_LST_CASE_Filter_LST_Bridge_EntryPoints.h>
#include <type-hamr_SW_CASE_Filter_LST_thr_Impl_Operational_Api.h>
#include <type-hamr_SW_CASE_Monitor_Geo_thr_Impl_Api.h>
#include <type-hamr_SW_CASE_Monitor_Geo_thr_Impl_Initialization_Api.h>
#include <type-hamr_SW_CASE_Monitor_Geo_thr_Impl_MCMP_PROC_SW_MON_GEO_CASE_Monitor_Geo.h>
#include <type-hamr_SW_CASE_Monitor_Geo_thr_Impl_MCMP_PROC_SW_MON_GEO_CASE_Monitor_Geo_Bridge.h>
#include <type-hamr_SW_CASE_Monitor_Geo_thr_Impl_MCMP_PROC_SW_MON_GEO_CASE_Monitor_Geo_Bridge_EntryPoints.h>
#include <type-hamr_SW_CASE_Monitor_Geo_thr_Impl_Operational_Api.h>
#include <type-hamr_SW_CASE_Monitor_Req_thr_Impl_Api.h>
#include <type-hamr_SW_CASE_Monitor_Req_thr_Impl_Initialization_Api.h>
#include <type-hamr_SW_CASE_Monitor_Req_thr_Impl_MCMP_PROC_SW_MON_REQ_CASE_Monitor_Req.h>
#include <type-hamr_SW_CASE_Monitor_Req_thr_Impl_MCMP_PROC_SW_MON_REQ_CASE_Monitor_Req_Bridge.h>
#include <type-hamr_SW_CASE_Monitor_Req_thr_Impl_MCMP_PROC_SW_MON_REQ_CASE_Monitor_Req_Bridge_EntryPoints.h>
#include <type-hamr_SW_CASE_Monitor_Req_thr_Impl_Operational_Api.h>
#include <type-hamr_SW_FlyZonesDatabase_thr_Impl_Api.h>
#include <type-hamr_SW_FlyZonesDatabase_thr_Impl_Initialization_Api.h>
#include <type-hamr_SW_FlyZonesDatabase_thr_Impl_MCMP_PROC_SW_FlyZones_FlyZonesDatabase.h>
#include <type-hamr_SW_FlyZonesDatabase_thr_Impl_MCMP_PROC_SW_FlyZones_FlyZonesDatabase_Bridge.h>
#include <type-hamr_SW_FlyZonesDatabase_thr_Impl_MCMP_PROC_SW_FlyZones_FlyZonesDatabase_Bridge_EntryPoints.h>
#include <type-hamr_SW_FlyZonesDatabase_thr_Impl_Operational_Api.h>
#include <type-hamr_SW_RadioDriver_Attestation_thr_Impl_Api.h>
#include <type-hamr_SW_RadioDriver_Attestation_thr_Impl_Initialization_Api.h>
#include <type-hamr_SW_RadioDriver_Attestation_thr_Impl_MCMP_PROC_SW_RADIO_RadioDriver_Attestation.h>
#include <type-hamr_SW_RadioDriver_Attestation_thr_Impl_MCMP_PROC_SW_RADIO_RadioDriver_Attestation_Bridge.h>
#include <type-hamr_SW_RadioDriver_Attestation_thr_Impl_MCMP_PROC_SW_RADIO_RadioDriver_Attestation_Bridge_EntryPoints.h>
#include <type-hamr_SW_RadioDriver_Attestation_thr_Impl_Operational_Api.h>
#include <type-hamr_SW_UxAS_thr_Impl_Api.h>
#include <type-hamr_SW_UxAS_thr_Impl_Initialization_Api.h>
#include <type-hamr_SW_UxAS_thr_Impl_MCMP_PROC_SW_UXAS_UxAS.h>
#include <type-hamr_SW_UxAS_thr_Impl_MCMP_PROC_SW_UXAS_UxAS_Bridge.h>
#include <type-hamr_SW_UxAS_thr_Impl_MCMP_PROC_SW_UXAS_UxAS_Bridge_EntryPoints.h>
#include <type-hamr_SW_UxAS_thr_Impl_Operational_Api.h>
#include <type-hamr_SW_WaypointPlanManagerService_thr_Impl_Api.h>
#include <type-hamr_SW_WaypointPlanManagerService_thr_Impl_Initialization_Api.h>
#include <type-hamr_SW_WaypointPlanManagerService_thr_Impl_MCMP_PROC_SW_WPM_WaypointPlanManagerService.h>
#include <type-hamr_SW_WaypointPlanManagerService_thr_Impl_MCMP_PROC_SW_WPM_WaypointPlanManagerService_Bridge.h>
#include <type-hamr_SW_WaypointPlanManagerService_thr_Impl_MCMP_PROC_SW_WPM_WaypointPlanManagerService_Bridge_EntryPoints.h>
#include <type-hamr_SW_WaypointPlanManagerService_thr_Impl_Operational_Api.h>
#include <type-hamr_SharedMemory.h>
#include <type-hamr_TranspilerToucher.h>
#include <type-hamr_UARTDriver_Impl_MCMP_PROC_SW_FC_UART_UARTDriver_App.h>
#include <type-hamr_UxAS_thr_Impl_MCMP_PROC_SW_UXAS_UxAS_App.h>
#include <type-hamr_WaypointPlanManagerService_thr_Impl_MCMP_PROC_SW_WPM_WaypointPlanManagerService_App.h>
#include <type-org_sireum_IS_08117A.h>
#include <type-org_sireum_IS_7E8796.h>
#include <type-org_sireum_IS_820232.h>
#include <type-org_sireum_IS_82ABD8.h>
#include <type-org_sireum_IS_948B60.h>
#include <type-org_sireum_IS_AA0F82.h>
#include <type-org_sireum_IS_C4F575.h>
#include <type-org_sireum_MBox2_1029D1.h>
#include <type-org_sireum_MBox2_1CBFC4.h>
#include <type-org_sireum_MS_2590FE.h>
#include <type-org_sireum_MS_83D5EB.h>
#include <type-org_sireum_MS_B5E3E6.h>
#include <type-org_sireum_MS_E444B2.h>
#include <type-org_sireum_MS_F55A18.h>
#include <type-org_sireum_None.h>
#include <type-org_sireum_None_3026C5.h>
#include <type-org_sireum_None_306A73.h>
#include <type-org_sireum_None_392677.h>
#include <type-org_sireum_None_39BC5F.h>
#include <type-org_sireum_None_3A40F5.h>
#include <type-org_sireum_None_45110B.h>
#include <type-org_sireum_None_4BF8A4.h>
#include <type-org_sireum_None_5189C1.h>
#include <type-org_sireum_None_579C8E.h>
#include <type-org_sireum_None_5C1355.h>
#include <type-org_sireum_None_60EB73.h>
#include <type-org_sireum_None_69DE14.h>
#include <type-org_sireum_None_7290DE.h>
#include <type-org_sireum_None_734370.h>
#include <type-org_sireum_None_76463B.h>
#include <type-org_sireum_None_77A6BF.h>
#include <type-org_sireum_None_78A1D4.h>
#include <type-org_sireum_None_844F3C.h>
#include <type-org_sireum_None_964667.h>
#include <type-org_sireum_None_A929A3.h>
#include <type-org_sireum_None_C554A3.h>
#include <type-org_sireum_None_D64418.h>
#include <type-org_sireum_None_E7D454.h>
#include <type-org_sireum_None_ED72E1.h>
#include <type-org_sireum_None_FE10D0.h>
#include <type-org_sireum_Nothing.h>
#include <type-org_sireum_Option_21F455.h>
#include <type-org_sireum_Option_30119F.h>
#include <type-org_sireum_Option_54EF1B.h>
#include <type-org_sireum_Option_6239DB.h>
#include <type-org_sireum_Option_63CBE2.h>
#include <type-org_sireum_Option_6F37E4.h>
#include <type-org_sireum_Option_73B21F.h>
#include <type-org_sireum_Option_7BBFBE.h>
#include <type-org_sireum_Option_80DF3B.h>
#include <type-org_sireum_Option_849849.h>
#include <type-org_sireum_Option_8499A8.h>
#include <type-org_sireum_Option_869AEE.h>
#include <type-org_sireum_Option_882048.h>
#include <type-org_sireum_Option_8E9F45.h>
#include <type-org_sireum_Option_9382FA.h>
#include <type-org_sireum_Option_9AD908.h>
#include <type-org_sireum_Option_9AF35E.h>
#include <type-org_sireum_Option_9CA19A.h>
#include <type-org_sireum_Option_AE3831.h>
#include <type-org_sireum_Option_B4E093.h>
#include <type-org_sireum_Option_B4EF66.h>
#include <type-org_sireum_Option_C04856.h>
#include <type-org_sireum_Option_C622DB.h>
#include <type-org_sireum_Option_E8930C.h>
#include <type-org_sireum_Option_F010C8.h>
#include <type-org_sireum_Some.h>
#include <type-org_sireum_Some_003142.h>
#include <type-org_sireum_Some_018CE9.h>
#include <type-org_sireum_Some_08A5F4.h>
#include <type-org_sireum_Some_181FDB.h>
#include <type-org_sireum_Some_30503C.h>
#include <type-org_sireum_Some_3E197E.h>
#include <type-org_sireum_Some_4782C6.h>
#include <type-org_sireum_Some_481DA5.h>
#include <type-org_sireum_Some_482E57.h>
#include <type-org_sireum_Some_488F47.h>
#include <type-org_sireum_Some_5BDE4D.h>
#include <type-org_sireum_Some_6322F0.h>
#include <type-org_sireum_Some_65C258.h>
#include <type-org_sireum_Some_74DA67.h>
#include <type-org_sireum_Some_7F8DC4.h>
#include <type-org_sireum_Some_8D03B1.h>
#include <type-org_sireum_Some_967389.h>
#include <type-org_sireum_Some_993707.h>
#include <type-org_sireum_Some_BAA603.h>
#include <type-org_sireum_Some_CA0A4D.h>
#include <type-org_sireum_Some_D29615.h>
#include <type-org_sireum_Some_D48312.h>
#include <type-org_sireum_Some_F82A4D.h>
#include <type-org_sireum_Some_FCAC0B.h>
#include <type-org_sireum_Tuple2_EC3B57.h>
#include <type-org_sireum_U8.h>

#if defined(static_assert)
#define STATIC_ASSERT static_assert
#define GLOBAL_STATIC_ASSERT(a, b, c) static_assert(b, c)
#else
#define STATIC_ASSERT(pred, explanation); {char assert[1/(pred)];(void)assert;}
#define GLOBAL_STATIC_ASSERT(unique, pred, explanation); namespace ASSERTION {char unique[1/(pred)];}
#endif

size_t sizeOf(Type t);
void Type_assign(void *dest, void *src, size_t destSize);

#ifdef __cplusplus
}
#endif

#endif