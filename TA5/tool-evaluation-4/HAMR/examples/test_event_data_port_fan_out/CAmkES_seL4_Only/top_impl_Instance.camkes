// This file will be regenerated, do not edit

import <std_connector.camkes>;
import <global-connectors.camkes>;
import <TimeServer/TimeServer.camkes>;;
import "components/emitter_impl_test_event_data_port_src/emitter_impl_test_event_data_port_src.camkes";
import "components/consumer_queue_default_impl_test_event_data_port_snk_default/consumer_queue_default_impl_test_event_data_port_snk_default.camkes";
import "components/consumer_queue_2_impl_test_event_data_port_snk_2_A/consumer_queue_2_impl_test_event_data_port_snk_2_A.camkes";
import "components/consumer_queue_2_impl_test_event_data_port_snk_2_B/consumer_queue_2_impl_test_event_data_port_snk_2_B.camkes";
import "components/consumer_queue_5_impl_test_event_data_port_snk_5/consumer_queue_5_impl_test_event_data_port_snk_5.camkes";
import "components/dispatch_periodic/dispatch_periodic.camkes";

assembly {
  composition {
    component emitter_impl_test_event_data_port_src test_event_data_port_src;
    component consumer_queue_default_impl_test_event_data_port_snk_default test_event_data_port_snk_default;
    component consumer_queue_2_impl_test_event_data_port_snk_2_A test_event_data_port_snk_2_A;
    component consumer_queue_2_impl_test_event_data_port_snk_2_B test_event_data_port_snk_2_B;
    component consumer_queue_5_impl_test_event_data_port_snk_5 test_event_data_port_snk_5;
    component dispatch_periodic dispatch_periodic_inst;
    component TimeServer time_server;

    connection seL4Notification conn1(from test_event_data_port_src.sb_enq_1_notification, to test_event_data_port_snk_default.sb_deq_notification);
    connection seL4SharedData conn2(from test_event_data_port_src.sb_enq_queue_1, to test_event_data_port_snk_default.sb_deq_queue);
    connection seL4Notification conn3(from test_event_data_port_src.sb_enq_2_notification, to test_event_data_port_snk_2_A.sb_deq_notification, to test_event_data_port_snk_2_B.sb_deq_notification);
    connection seL4SharedData conn4(from test_event_data_port_src.sb_enq_queue_2, to test_event_data_port_snk_2_A.sb_deq_queue, to test_event_data_port_snk_2_B.sb_deq_queue);
    connection seL4Notification conn5(from test_event_data_port_src.sb_enq_5_notification, to test_event_data_port_snk_5.sb_deq_notification);
    connection seL4SharedData conn6(from test_event_data_port_src.sb_enq_queue_5, to test_event_data_port_snk_5.sb_deq_queue);
    connection seL4Notification conn7(from dispatch_periodic_inst.sb_test_event_data_port_src_periodic_dispatch_notification, to test_event_data_port_src.sb_periodic_dispatch_notification);
    connection seL4TimeServer conn8(from dispatch_periodic_inst.timer, to time_server.the_timer);
    connection seL4GlobalAsynchCallback conn9(from time_server.timer_notification, to dispatch_periodic_inst.timer_complete);
  }

  configuration {
    test_event_data_port_src.sb_enq_queue_1_access = "W";
    test_event_data_port_snk_default.sb_deq_queue_access = "R";
    test_event_data_port_src.sb_enq_queue_2_access = "W";
    test_event_data_port_snk_2_A.sb_deq_queue_access = "R";
    test_event_data_port_snk_2_B.sb_deq_queue_access = "R";
    test_event_data_port_src.sb_enq_queue_5_access = "W";
    test_event_data_port_snk_5.sb_deq_queue_access = "R";
    time_server.timers_per_client = 1;
    dispatch_periodic_inst.timer_attributes = 1;
    dispatch_periodic_inst.priority = 201;

  }
}
