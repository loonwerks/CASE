// This file will be regenerated, do not edit

import <std_connector.camkes>;
import <global-connectors.camkes>;
import <TimeServer/TimeServer.camkes>;;
import "components/source_thread_impl_source_process_component_source_thread_component/source_thread_impl_source_process_component_source_thread_component.camkes";
import "components/sb_Monitors/sb_destination_thread_component_read_port_Monitor/sb_destination_thread_component_read_port_Monitor.camkes";
import "components/destination_thread_impl_destination_process_component_destination_thread_component/destination_thread_impl_destination_process_component_destination_thread_component.camkes";
import "components/dispatch_periodic/dispatch_periodic.camkes";

assembly {
  composition {
    component source_thread_impl_source_process_component_source_thread_component source_process_component_source_thread_component;
    component sb_destination_thread_component_read_port_Monitor sb_destination_thread_component_read_port_monitor;
    component destination_thread_impl_destination_process_component_destination_thread_component destination_process_component_destination_thread_component;
    component dispatch_periodic dispatch_periodic_inst;
    component TimeServer time_server;

    connection seL4RPCCall conn1(from source_process_component_source_thread_component.sb_write_port0, to sb_destination_thread_component_read_port_monitor.mon);
    connection seL4RPCCall conn2(from destination_process_component_destination_thread_component.sb_read_port, to sb_destination_thread_component_read_port_monitor.mon);
    connection seL4Notification conn3(from sb_destination_thread_component_read_port_monitor.monsig, to destination_process_component_destination_thread_component.sb_read_port_notification);
    connection seL4Notification conn4(from dispatch_periodic_inst.sb_source_process_component_source_thread_component_periodic_dispatch_notification, to source_process_component_source_thread_component.sb_periodic_dispatch_notification);
    connection seL4Notification conn5(from dispatch_periodic_inst.sb_destination_process_component_destination_thread_component_periodic_dispatch_notification, to destination_process_component_destination_thread_component.sb_periodic_dispatch_notification);
    connection seL4TimeServer conn6(from dispatch_periodic_inst.timer, to time_server.the_timer);
    connection seL4GlobalAsynchCallback conn7(from time_server.timer_notification, to dispatch_periodic_inst.timer_complete);
  }

  configuration {
    time_server.timers_per_client = 1;
    dispatch_periodic_inst.timer_attributes = 1;
    dispatch_periodic_inst.priority = 201;
  }
}
