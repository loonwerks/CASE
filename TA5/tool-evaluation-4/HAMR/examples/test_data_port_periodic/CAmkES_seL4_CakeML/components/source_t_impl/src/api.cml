(* Type 3 Code - This code will be auto-generated by HAMR to provide interfaces for 
 *  port communication and threading that
 *   - are called by CakeML Type 4 code (application code)
 *   - call "down" via FFI to Type 3 C code - a thin bridge to HAMR C APIs that are standard to all languages and platforms
 *
 *)
 
(* This structure is populated with HAMR-generated code *)
structure API =
struct

  (* Used to make FFI calls where no response from the outside world is expected *)
  val empty_byte_array = Word8Array.array 0 (Word8.fromInt 0);
  val singleton_byte_array = Word8Array.array 1 (Word8.fromInt 0);  

  (**********************************
   * begin generic API functions    *
   **********************************)

  (* logging functions *)
  
  fun logInfo s = (#(loginfo) s empty_byte_array);
  fun logDebug s = (#(logdebug) s empty_byte_array);
  fun logError s = (#(logerror) s empty_byte_array);

  (**********************************
   * begin component-specific API   *
   **********************************)

  (* ToDo: Rename to set_<AADL-out-port-name> *)
  fun sb_write_port_write s = #(sb_write_port_write) s empty_byte_array; (* TODO: validate length of s *)
end;